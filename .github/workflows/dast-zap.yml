name: DAST ZAP Scan

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Reset workspace
        run: sudo rm -rf "$GITHUB_WORKSPACE"/* || true

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          clean: false

      - name: Start MySQL
        run: |
          docker run -d --name dvna-mysql \
            --env MYSQL_USER=dvna \
            --env MYSQL_DATABASE=dvna \
            --env MYSQL_PASSWORD=passw0rd \
            --env MYSQL_RANDOM_ROOT_PASSWORD=yes \
            mysql:5.7

      - name: Start DVNA app
        run: |
          docker run -d --name dvna-app \
            --link dvna-mysql:mysql-db \
            -p 9090:9090 \
            -e MYSQL_USER=dvna \
            -e MYSQL_DATABASE=dvna \
            -e MYSQL_PASSWORD=passw0rd \
            -e MYSQL_RANDOM_ROOT_PASSWORD=yes \
            appsecco/dvna

      - name: Wait for service
        run: |
          echo "Waiting for DVNA to be available on http://localhost:9090 ..."
          for i in {1..30}; do
            if curl -s http://localhost:9090 > /dev/null; then
              echo "DVNA is up!"
              exit 0
            fi
            sleep 5
          done
          echo "DVNA did not start in time" && exit 1

      - name: Run ZAP baseline scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: "http://localhost:9090"
          cmd_options: "-I -r zap-baseline.html"
          docker_name: ghcr.io/zaproxy/zaproxy:stable
          fail_action: false

      - name: Upload ZAP reports
        uses: actions/upload-artifact@v3
        with:
          name: zap-reports
          path: |
            report_json.json
            report_md.md
            report_html.html
            zap-baseline.html

      - name: Stop containers
        if: always()
        run: |
          docker stop dvna-app || true
          docker stop dvna-mysql || true
